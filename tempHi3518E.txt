


== 名词解释 ================================================
Abbreviations	Full spelling 			Chinese explanation 
缩略语		英文全名				中文解释
SDK		Software Developer’s Kit	软件开发工具包MPP		Media Processing Platform	媒体处理平台IPC		Internet Protocol Camera	网络摄像机ISP		Image Signal Pipeline		图像信号处理LDC		Lens Distortion Correction	镜头畸变校正AI		Auto Iris Control		自动光圈控制VI		Video Input			视频输入VO		Video Output			视频输出VPSS		Video Process Sub-System	视频处理子系统/视频前处理单元，是视频数据编码前的预处理单元，主要完成对一幅输入图像的统一预处理，如去噪、去隔行等。VEDU		Video Encode Unit		视频编码单元IVE		Intelligent Video Engineering	智能加速引擎PTS		Presentation Time Stamp	时间戳DDRC		Double-Data Rate Controller	DDR 控制器MMZ		Media Memory Zone		媒体内存区域ROI		Region Of Interest		感兴趣区域
venc		video encode			视频编码

屏幕的分辨率。 
VGA		Video Graphics Array		显示绘图矩阵，相当于640×480 像素； 
HVGA		Half-size VGA			VGA的一半，分辨率为480×320，像三星盖世Ace S5830就是使用这分辨率； 
QVGA		Quarter VGA			VGA的四分之一，分辨率为320×240，一般用于小屏手机 像三星盖世Mini S5570就是使用这分辨率； 
WQVGA		Wide Quarter VGA		扩大的QVGA，分辨率比QVGA高，比VGA低，一般是：400×240，480×272； 
WVGA		Wide Video Graphics Array	扩大的VGA，分辨率为800×480像素，像三星i9000就是使用这分辨率； 
FWVGA		Full Wide VGA			数码产品屏幕材质的一种，VGA的另一种形式，比WVGA分辨率高，别名 ： Full Wide VGA, ，其分辨 率为854×480象素(16:9)。

TDE		Two Dimensional Engine		二维引擎。利用硬件为OSD（On Screen Display）和GUI（Graphics User Interface）提供快速的图形绘制功能，主要有快速位图搬移、快速色彩填充、快速抗闪搬移、快速位图缩放、画点、画水平/垂直线、位图格式转换、位图alpha 叠加、位图按位布尔运算、ColorKey 操作。

== 海思SDK资料包说明 ================================================

链接：http://pan.baidu.com/s/1nv0iX6L
密码：q2qm
压缩文件的解压密码：qddytt


开发使用的相关工具：
./HI3518EV200+AR0130+16M/工具


海思SDK官方文档：
./HI3518EV200+AR0130+16M/海思SDK

Ubuntu10.04开发环境：虚拟机可用环境，需要安装VMware
./HI3518EV200+AR0130+16M/HI3518EV200-AR0130-16M flash.7z


Hi3518E开发板的功能测试说明文档：
./HI3518EV200+AR0130+16M/HI3518EV200+AR0130+16M flash 板子测试文档.rar


Hi3518E开发板资料包：linux源码、编译说明、各种配置等
./HI3518EV200+AR0130+16M/hi3518ev200+ar0130+16m单独资料包.7z

VMware Fusion mac(虚拟机软件) v8.5.0 简体中文版：
下载：
http://www.xp510.com/mac/32308.html
破解码：
FY7N2-6RGD2-081XZ-UYWQC-ZPKCA


== 开发板资料包相关说明 ================================================
./HI3518EV200+AR0130+16M/hi3518ev200+ar0130+16m单独资料包/hi3518

arm-hisiv300-linux：arm-linux交叉编译工具，基于uclibc（一个小型的C语言标准库，主要用于嵌入式），用于在新的Ubuntu环境下，安装海思的交叉编译器。
linux-3.4.y：linux内核编译目录。
mpp：存放媒体处理平台的目录，包里面是视频编码的例子及测试方法
nfs：NFS服务器相关目录
rootfs：rootfs文件系统编译目录
rtl8188：wifi模块驱动源码，编译驱动命令
tftpboot：编译好的rootfs-ar0130.jffs2及uImage


-- 模块说明 ------------------------------------------------
具体说明请参考：/Users/guojh/work/guojh/hds/doc/海思芯片/Hi3518E/HI3518EV200+AR0130+16M/hi3518ev200+ar0130+16m单独资料包/hi3518/mpp/mpp模块说明.txt

MPP：海思媒体处理平台主要分为：
视频输入（VI）
视频处理（VPSS）
视频编码（VENC）
视频解码（VDEC）
视频输出(VO)
视频侦测分析(VDA)
音频输入(AI)
音频输出(AO)
音频编码（AENC）
音频解码（ADEC）
区域管理（REGION）


== 安装海思的交叉编译器 ================================================
PS: 提供的虚拟机里面已经安装好了海思提供的交叉编译器，不需要再安装了。

如果是自己的开发环境，安装步骤如下：
cd arm-hisiv300-linux
./cross.v300.install


== 编译 ================================================

-- 编译内核 ------------------------------------------------
cd ./linux-3.0.y
./mk3518.sh

PS: mk3518.sh 脚本里面包含了编译linux内核所需的所有的命令，具体看mk3518.sh文件，编译成功将生成在目录arch/arm/boot/uImage文件，这个就是要烧录到板子上的

-- 制作rootfs文件系统 ------------------------------------------------
./mkfs.jffs2 -d ./rootfs -l -e 0x10000 -o rootfs-ar0130.jffs2

PS: 生成的rootfs-ar0130.jffs2这个就是要烧录到板子上的内核文件


== 往板子烧录固件 ================================================
地址空间说明
        |     256K   |      1792K    |      14336K           |
        |------------|---------------|-----------------------|
        |    boot    |     kernel    |     rootfs            |



烧录流程：
1.将uImage、rootfs-ar0130.jffs2放到tftp服务器目录
2.启动TFTPSvr.exe，保证tftp服务器目录指向uImage、rootfs-ar0130.jffs2所在目录
3.连接设备：插入USB、网线。
4.启动SecureCRT，连接设备，并保持SecureCRT为激活界面。
5.按住crtl+c，为板子上电，进入uboot
6.修改板子的IP、网关等：192.168.2.247为windows的tftp服务器IP，192.168.2.99为板子指定的IP
  set serverip 192.168.2.247		// windows的tftp服务器IP  set ipaddr 192.168.2.99 		// 为板子指定的IP  set ethaddr xx:xx:xx:xx:xx:xx	// 不用管  set netmask 255.255.255.0  set gatewayip 192.168.2.1		// 网关地址
7.烧写内核程序：
  mw.b 0x82000000 0xFF 0x1C0000
  tftp 0x82000000 uImage
  sf probe 0
  sf erase 0x40000 0x1C0000
  sf write 0x82000000 0x40000 0x1C0000
8.烧写rootfs文件系统：
  mw.b 0x82000000 0xFF 0xE00000
  tftp 0x82000000 rootfs-ar0130.jffs2
  sf probe 0
  sf erase 0x200000 0xE00000
  sf write 0x82000000 0x200000 0xE00000
9.设置启动参数和启动命令：
  setenv bootargs 'mem=32M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 mtdparts=hi_sfc:256K(boot),1792K(kernel),14336K(rootfs)';setenv bootcmd 'sf probe 0;sf read 0x82000000 0x40000 0x1C0000;bootm 0x82000000';saveenv;reset


-- 以下为资料整理 ------------------------------------------------
板子上电时按住crtl+c，进入uboot里面烧写内核、rootfs这些

-- uboot里面烧写内核 ------------------------------------------------
set serverip 192.168.1.199;mw.b 0x82000000 0xFF 0x1C0000;tftp 0x82000000 uImage;sf probe 0;sf erase 0x40000 0x1C0000;sf write 0x82000000 0x40000 0x1C0000

set serverip 192.168.1.199;   		// 设置NFS?/tftp?服务器IP
mw.b 0x82000000 0xFF 0x1C0000;		// 将内存地址0x82000000开始大小为0x1C0000的区域设置为0xFF
tftp 0x82000000 uImage;  		// 从主机的tftp目录中下载uImage到0x82000000这个地址。编译出来的uImage内核文件，精简后的linux内核为1.7M大小
sf probe 0;				// 挂载
sf erase 0x40000 0x1C0000;		// 擦除
sf write 0x82000000 0x40000 0x1C0000	// 烧写

-- 烧写rootfs文件系统 ------------------------------------------------
mw.b 0x82000000 0xFF 0xE00000;tftp 0x82000000 rootfs-ar0130.jffs2;sf probe 0;sf erase 0x200000 0xE00000;sf write 0x82000000 0x200000 0xE00000

mw.b 0x82000000 0xFF 0xE00000;
tftp 0x82000000 rootfs-ar0130.jffs2;	// 根文件系统，里边包含了基本的驱动
sf probe 0;
sf erase 0x200000 0xE00000;
sf write 0x82000000 0x200000 0xE00000


-- 设置启动参数和启动命令 ------------------------------------------------
setenv bootargs 'mem=32M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 mtdparts=hi_sfc:256K(boot),1792K(kernel),14336K(rootfs)';setenv bootcmd 'sf probe 0;sf read 0x82000000 0x40000 0x1C0000;bootm 0x82000000';saveenv;reset

setenv bootargs 'mem=32M console=ttyAMA0,115200 root=/dev/mtdblock2 rootfstype=jffs2 mtdparts=hi_sfc:256K(boot),1792K(kernel),14336K(rootfs)';
setenv bootcmd 'sf probe 0;sf read 0x82000000 0x40000 0x1C0000;bootm 0x82000000';
saveenv;
reset

== 测试摄像头的视频录制功能 ================================================
1.准备工具及环境：
    VLC播放器、TFTPSvr.exe、SecureCRT
    第一次测试的话需要USB转串口(CH340G)驱动（USB转串口-CH340G.EXE）

2.使用SecureCRT连接设备：
    1）摄像头板子上电：插上USB，端口应该是COM3，电源和网线先不用插。
    2）启动SecureCRT：Protocol选择Serial，Port应该是COM3（取决于实际端口），波特率为115200，数据位8位，校验位无，停止位1位，勾选Save session，其余复选框都不选。
    3）点击连接，此时SecureCRT应该没什么信息。
    4）插上摄像头电源及网线，此时SecureCRT应该可以看到板子的启动信息。
3.启动TFTPSvr.exe，并设置服务目录。
4.将视频编码示例程序sample_venc放到TFTP服务目录下
5.在SecureCRT中输入如下命令：
  PS：IP地址192.168.1.100是windows的IP地址，需要改成实际的windows的IP地址
    1）mount tmpfs /tmp -t tmpfs –o size=4m	// 设置文件传输临时目录tmp
    2）cd /tmp		// 进入临时目录
    3）tftp -g -r sample_venc 192.168.1.100	// 从windows下载视频编码示例程序sample_venc到tmp    4）chmod +x sample_venc		// 修改sample_venc用户权限    5）./sample_venc 0			// 启动sample_venc
    6）出现“please input choose rc mode!”后，输入c，回车    7）出现“please press twice ENTER to exit this sample”后，等待约10秒左右，按两次回车结束运行。
    8）查看生成的h264视频文件(ls -l)，可以看到摄像头拍摄的三个不同屏幕尺寸的.h264视频文件
    9）将视频文件传回windows：tftp -p -l stream_chn0.h264 192.168.1.100
    10）使用vlc即可查看这些视频文件。

注意：
1.需要让摄像头板子的IP地址，跟windows在同一个网段，可以用ifconfig在板子启动后设置一下，如：
ifconfig eth0 192.168.2.99 netmask 255.255.255.0
route add default gw 192.168.2.1


== 测试摄像头的流视频播放功能 ================================================
1.使用SecureCRT连接设备（参考“测试摄像头的视频录制功能”）
2.在SecureCRT中输入“rtsp”，启动rtsp服务。
3.打开VLC，设置流播放地址：File-Open Network
4.在Network的URL中输入“rtsp://192.168.2.99/test.264”，IP地址为摄像头板子的实际IP地址
5.点击Open，即可看到摄像头传回来的视频数据了。


== linux命令 ================================================

-- 修改IP及网关（只能临时生效，重启后无效） ------------------------------------------------
配置ip地址和子网掩码：
ifconfig eth0 192.168.2.99 netmask 255.255.255.0ifconfig eth0 192.168.2.99 netmask 255.255.255.0 up

设置缺省网关：
route add default gw 192.168.2.1

mount nfs：
mount -t nfs -o nolock xxx.xxx.xxx.xxx:/your/path /mount-dir

shell下使用tftp上传下载文件：前提是在server端有tftp服务软件在运行。下载文件：tftp -r XX.file serverip -g    其中：XX.file为需要下载的文件，serverip需要下载的文件所在的server的ip地址。上传文件：tftp -l xx.file remoteip –p    其中，xx.file为需要上传的文件，remoteip文件需要上传到的server的ip地址。

支持IPv6：参考“海思SDK/Hi3518E V200R001C01SPC030/01.software/board/document_cn/外围设备驱动 操作指南.pdf”中的“1.2IPv6说明”


== 板子系统目录信息 ================================================
一个完整的Linux系统根目录文件：
/：根目录
/bin：基本命令的可执行文件
/boot：内核映像已经启动时需要用到的一些文件
/dev：设备文件
/etc：系统配置文件，包括启动文件
/home：用户目录
/lib：基本库，例如C库和内核模块
/lost+found：在文件系统修复时恢复的文件
/mnt：临时文件系统的挂载点
/nfsroot：nfs文件夹，一般不使用
/opt：添加的软件包
/proc：内核以及进程信息的虚拟文件系统
/root：root用户目录
/sbin：用于系统管理的可执行程序
/share：共享文件目录
/sys：系统设备和文件层次结构，向用户提供详细的内核数据信息
/tmp：临时文件
/usr：该目录的二级目录包含许多对用户很有用的应用程序和文档
/var：存放系统日志或一些服务程序的临时文件


嵌入式系统中可忽略的目录说明：
/home、/mnt、/opt 和/root：所有适合提供给多用户扩展的目录，都可以被忽略。
/var 和/tmp：/var是存放系统日志或一些服务程序的临时文件。/tmp 是存放用户的一些临时文件，可以被忽略。
/boot：/boot 目录一般用于存放内核映像，PC 机启动时一般会从该位置加载内核，但在嵌入式系统中，为了节省空间，内核映像存在于Flash 或网络服务器中，而不是在根文件系统中。因此也可以忽略这个目录。
注：空目录并不会增大文件系统的体积，如果没有特殊原因，建议保留这些目录。

== 板子个性化定制信息 ================================================

1.主机名称：“qddytt”改为“hicgege”
linux-3.4.y/include/generated/compile.h:5:#define LINUX_COMPILE_HOST "qddytt"

2.欢迎信息：“Welcome to HiLinux”改为“Welcome to GJH Linux”
rootfs/etc/profile:32:echo "${GREEN}Welcome to HiLinux.${NORMAL}"

3.ssid：“qddytt”改为“HICGEGE”
rootfs/etc/hostapd.conf:5:ssid=qddytt
rootfs/etc/wpa.conf:4:ssid="qddytt"

4.wpa_passphrase：“qddytt11”改为“123456789”
rootfs/etc/hostapd.conf:8:wpa_passphrase=qddytt11

5.默认IP：“192.168.1.10”改为“192.168.2.99”
rootfs/etc/init.d/rcS:22:ifconfig eth0 192.168.1.10
改为：
ifconfig eth0 192.168.2.99 netmask 255.255.255.0
route add default gw 192.168.2.1

--  ------------------------------------------------

搜索命令：
grep -rn "" *

查找文件命令：
find ./ -name "hello.txt"

grep -rn "Welcome to HiLinux" *
rootfs/etc/profile:32:echo "${GREEN}Welcome to HiLinux.${NORMAL}"


grep -rn "System startup" *
linux-3.4.y/arch/arm/mach-at91/leds.c:139:	case led_start:		/* System startup */
linux-3.4.y/arch/arm/mach-ks8695/leds.c:49:	case led_start:		/* System startup */


grep -rn "192.168.1.10" *
linux-3.4.y/arch/arm/boot/dts/pxa168-aspenite.dts:18:		bootargs = "console=ttyS0,115200 root=/dev/nfs nfsroot=192.168.1.100:/nfsroot/ ip=192.168.1.101:192.168.1.100::255.255.255.0::eth0:on";
linux-3.4.y/arch/arm/configs/mmp2_defconfig:19:CONFIG_CMDLINE="root=/dev/nfs rootfstype=nfs nfsroot=192.168.1.100:/nfsroot/ ip=192.168.1.101:192.168.1.100::255.255.255.0::eth0:on console=ttyS2,38400 mem=128M user_debug=255"
linux-3.4.y/arch/arm/configs/pxa3xx_defconfig:18:CONFIG_CMDLINE="root=/dev/nfs rootfstype=nfs nfsroot=192.168.1.100:/nfsroot/ ip=192.168.1.101:192.168.1.100::255.255.255.0::eth0:on console=ttyS0,115200 mem=64M debug"
linux-3.4.y/Documentation/networking/bonding.txt:1494:force all traffic bound to 192.168.1.100 to use eth1 in the bond as its output
linux-3.4.y/Documentation/networking/bonding.txt:1500:	192.168.1.100 action skbedit queue_mapping 2
linux-3.4.y/Documentation/networking/bonding.txt:1504:ip of 192.168.1.100 have their output queue mapping value overwritten to 2.
linux-3.4.y/fs/cifs/connect.c:2156:			"unc=//192.168.1.100/public) specified");
linux-3.4.y/sound/pci/asihpi/hpi.h:382:For 192.168.1.101
rootfs/etc/init.d/rcS:22:ifconfig eth0 192.168.1.10


grep -rn "qddytt" *
linux-3.4.y/include/generated/compile.h:5:#define LINUX_COMPILE_HOST "qddytt"
linux-3.4.y/mk3518.sh:2:cp hi3518ev200_qddytt .config
Binary file rootfs/bin/gpio.ko matches
rootfs/etc/hostapd.conf:5:ssid=qddytt
rootfs/etc/hostapd.conf:8:wpa_passphrase=qddytt11
rootfs/etc/wpa.conf:4:ssid="qddytt"
Binary file rootfs/usr/lib/qddytt/gpio.ko matches
Binary file rootfs-ar0130.jffs2 matches
Binary file tftpboot/rootfs-ar0130.jffs2 matches
wifi使用说明.txt:13:默认的热点名字：qddytt
wifi使用说明.txt:14:密码：qddytt11

grep -rn "https://hisisdk.taobao.com" *
Binary file rootfs/bin/gpio.ko matches
Binary file rootfs/usr/lib/qddytt/gpio.ko matches


grep -rn "Your input Sensor type is" *
mpp/ko/load3518e:246:	echo "==== Your input Sensor type is $SNS_TYPE ===="
mpp/ko/load3518e:255:	echo "==== Your input Sensor type is $SNS_TYPE ===="
mpp/ko/load3518ev201:213:	echo "==== Your input Sensor type is $SNS_TYPE ===="
mpp/ko/load3518ev201:222:	echo "==== Your input Sensor type is $SNS_TYPE ===="
rootfs/ko/load3518e:246:	echo "==== Your input Sensor type is $SNS_TYPE ===="
rootfs/ko/load3518e:255:	echo "==== Your input Sensor type is $SNS_TYPE ===="
rootfs/ko/load3518ev201:213:	echo "==== Your input Sensor type is $SNS_TYPE ===="
rootfs/ko/load3518ev201:222:	echo "==== Your input Sensor type is $SNS_TYPE ===="

grep -rn "None of nfsroot found in cmdline." *
rootfs/usr/sbin/nfsroot:20:	echo "None of nfsroot found in cmdline."


grep -rn "rtsp" *
drivers/net/wireless/brcm80211/brcmsmac/main.c:5844:	u8 *rtspfb = txh->RTSPLCPFallback;
drivers/net/wireless/brcm80211/brcmsmac/main.c:5857:	u8 *rtsph = txh->RTSPhyHeader;
drivers/net/wireless/brcm80211/brcmsmac/main.c:5884:			     rtspfb, sizeof(txh->RTSPLCPFallback));
drivers/net/wireless/brcm80211/brcmsmac/main.c:5903:			     rtsph, sizeof(txh->RTSPhyHeader));


== rtsp ================================================
参考：/Users/guojh/work/guojh/hds/doc/海思芯片/Hi3518E/HI3518EV200+AR0130+16M/rtsp-3518ev200-ar0130/readme.txt

主要分为如下主功能：
一、视频流数据获取：视频采集、编码，并将流数据放入环形缓冲区中，等待由RTSP会话对象发送给客户端。
相关方法：
SAMPLE_VENC_1080P_CLASSIC：线程函数：开始采集视频数据，并将视频帧数据、流数据保存到环形缓冲区中。
		与sample_venc例子中的代码区别为：强制为恒定比特率，而不是由输入参数决定。
SAMPLE_COMM_VENC_GetVencStreamProc：线程函数，视频编码流处理：获取流数据，然后保存到环形缓冲区中
		与sample_venc例子中的代码区别为：获取的流数据保持到环形缓冲区中，而不是保存到文件中。
HisiPutH264DataToBuffer：将海思SDK获取到的一个帧数据，put到环形缓冲区中。
		注意：不能超过环形缓冲区容量大小，如果容量已满则该帧会被丢弃，直到环形缓冲区被处理出空余容量才继续处理

二、视频流数据储存、处理：
相关方法：
schedule_do：线程函数，遍历10个stScheList对象，如果有被客户SETUP及PLAY过的RTP会话，则向客户端发送环形缓冲区中的流数据

三、RTSP协议业务处理：创建RTSP相关会话资源，处理客户端请求的RTSP业务请求，维护RTSP会话对象状态等
相关方法：
ScheduleConnections：对已有的连接进行调度：释放连接断开的会话，处理有效的会话请求（进行rtsp业务处理：向客户端发送应答信息、设置rtsp会话状态、发送流数据等操作）
RtspServer：检查指定的rtsp连接对象，是否连接正常（使用select()来确定套接口的状态），如果连接正常，进行rtsp业务处理：向客户端发送应答信息、设置rtsp会话状态、发送流数据等操作
RTSP_handler：处理rtsp缓冲区的数据，进行rtsp业务处理：向客户端发送应答信息、设置rtsp会话状态、发送流数据等操作
RTSP_validate_method：返回请求方法类型，出错返回-1：从rtsp的in_buffer中，解析出方法，并设置CSeq，然后返回方法ID
RTSP_state_machine：RTSP的状态机，用于处理RTSP协议相关业务


==  ================================================

--  ------------------------------------------------




== temp ================================================

--  ------------------------------------------------


痛苦虽然可怕，却能够让你变得强大！

/Users/guojh/work/guojh/hds/doc/海思芯片/Hi3518E/HI3518EV200+AR0130+16M/海思SDK/Hi3518E V200R001C01SPC030
/Users/guojh/work/guojh/hds/doc/海思芯片/Hi3518E/HI3518EV200+AR0130+16M/hi3518ev200+ar0130+16m单独资料包/hi3518/mpp



用IOS实现的BLE测试程序
用IOS实现的BLE通信测试程序，包含Central及Peripheral两部分。GGBLECentralTester是中心测试程序，GGBLEPeripheralTester是周边测试程序，两个程序可以用手机运行配合使用。


rtsp server源码

FIFO
live555

1,  推荐 live555. 
2，ACC 的话只能软转。  
3，海思的CPU在编码的时候不耗多少CPU，转 ACC完全够用，对于4路来讲都没问题。


1.live555的效率有些低，建议不使用...
2.编码后，需将码流放在一个缓冲区，然后rtsp再从缓冲区获取再打包传输
3.vlc设置里将延时改成小值




